# Multi-stage build for production
FROM python:3.11-slim AS builder

WORKDIR /build

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    python3-dev \
    libssl-dev \
    libffi-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements
COPY requirements-prod.txt .

# Install Python packages
RUN pip install --no-cache-dir -r requirements-prod.txt

# Production stage
FROM python:3.11-slim

WORKDIR /app

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy Python packages from builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy application
COPY src/streamline_vpn/ ./streamline_vpn/
COPY config/ ./config/
COPY scripts/ ./scripts/
COPY kubernetes/ ./kubernetes/
COPY monitoring/ ./monitoring/

# Create necessary directories
RUN mkdir -p /app/output /app/logs /app/cache /app/data

# Create non-root user
RUN useradd -m -u 1000 merger && \
    chown -R merger:merger /app

USER merger

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${API_PORT:-8000}/health || curl -f http://localhost:${API_PORT:-8000}/api/v1/health || exit 1

# Environment variables
ENV PYTHONUNBUFFERED=1
ENV STREAMLINE_ENV=production
ENV API_PORT=8000

EXPOSE 8000 8080

CMD ["python", "-m", "streamline_vpn"]
