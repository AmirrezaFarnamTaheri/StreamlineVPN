# VPN Merger - Docker Compose Configuration
# ========================================

version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: streamline-api
    ports:
      - "8080:8080"
    environment:
      - HOST=0.0.0.0
      - API_PORT=8080
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://streamline:password@postgres:5432/streamline
    volumes:
      - ./config:/app/config:ro
      - ./output:/app/output
      - ./logs:/app/logs
    command: python run_server.py
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    networks:
      - streamline-network

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: streamline-web
    ports:
      - "8000:8000"
    environment:
      - HOST=0.0.0.0
      - WEB_PORT=8000
      - API_PORT=8080
      - API_BASE=http://api:8080
    volumes:
      - ./docs:/app/docs:ro
      - ./output:/app/output:ro
    command: python run_web.py
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - streamline-network

  redis:
    image: redis:7-alpine
    container_name: streamline-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - streamline-network

  postgres:
    image: postgres:15-alpine
    container_name: streamline-postgres
    environment:
      - POSTGRES_DB=streamline
      - POSTGRES_USER=streamline
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    networks:
      - streamline-network

volumes:
  redis-data:
  postgres-data:

networks:
  streamline-network:
    driver: bridge


