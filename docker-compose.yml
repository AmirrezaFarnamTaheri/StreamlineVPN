version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: streamline
      POSTGRES_USER: streamline
      POSTGRES_PASSWORD: streamline123
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U streamline"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - streamline-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - streamline-network

  api:
    build: .
    container_name: streamline-api
    command: python run_server.py
    ports:
      - "8080:8080"
    environment:
      - HOST=0.0.0.0
      - API_PORT=8080
      - DATABASE_URL=postgresql://streamline:streamline123@postgres:5432/streamline
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./config:/app/config:ro
      - ./output:/app/output
      - ./src:/app/src:ro
    depends_on:
      - postgres
      - redis
    networks:
      - streamline-network

  web:
    build: .
    container_name: streamline-web
    command: python run_web.py
    ports:
      - "8000:8000"
    environment:
      - HOST=0.0.0.0
      - WEB_PORT=8000
      - API_BASE=http://api:8080
    volumes:
      - ./docs:/app/docs:ro
    depends_on:
      - api
    networks:
      - streamline-network

volumes:
  postgres-data:
  redis-data:

networks:
  streamline-network:
    driver: bridge
