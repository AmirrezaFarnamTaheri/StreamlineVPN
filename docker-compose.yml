version: '3.8'

services:
  streamline-api:
    build:
      context: .
      target: production
    container_name: streamline-api
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "8000:8000"
    environment:
      - STREAMLINE_ENV=production
      - API_HOST=0.0.0.0
      - API_PORT=8080
      - WEB_HOST=0.0.0.0
      - WEB_PORT=8000
      - STREAMLINE_LOG_LEVEL=INFO
      - STREAMLINE_REDIS__NODES=[{"host":"redis","port":"6379"}]
    volumes:
      - ./config:/app/config:ro
      - ./output:/app/output
      - ./logs:/app/logs
      - streamline-data:/app/data
    depends_on:
      - redis
    networks:
      - streamline-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  redis:
    image: redis:7-alpine
    container_name: streamline-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - streamline-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: streamline-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - streamline-api
    networks:
      - streamline-network

volumes:
  streamline-data:
    driver: local
  redis-data:
    driver: local

networks:
  streamline-network:
    driver: bridge
