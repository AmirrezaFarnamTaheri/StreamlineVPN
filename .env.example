# StreamlineVPN Environment Configuration (example)

# ===========================
# Application Settings
# ===========================

VPN_ENVIRONMENT=development
VPN_DEBUG=false
APP_NAME=StreamlineVPN

# ===========================
# API Server Configuration
# ===========================

API_HOST=0.0.0.0
API_PORT=8080
API_BASE_URL=http://localhost:8080

# ===========================
# Web Server Configuration
# ===========================

WEB_HOST=0.0.0.0
WEB_PORT=8000
SERVE_STATIC=true

# ===========================
# CORS Configuration (JSON arrays preferred)
# ===========================

ALLOWED_ORIGINS=["http://localhost:8000","http://localhost:8080","http://127.0.0.1:8000","http://127.0.0.1:8080"]
ALLOW_CREDENTIALS=true
ALLOWED_METHODS=["*"]
ALLOWED_HEADERS=["*"]

# Optional: Comma-separated alternatives also supported
# ALLOWED_ORIGINS=http://localhost:8000,http://localhost:8080
# ALLOWED_METHODS=GET,POST,OPTIONS
# ALLOWED_HEADERS=Content-Type,Authorization

# ===========================
# Processing Configuration
# ===========================

APP_CONFIG_PATH=config/sources.unified.yaml
VPN_OUTPUT_DIR=output
VPN_CONCURRENT_LIMIT=50
VPN_TIMEOUT=30
VPN_MAX_RETRIES=3
VPN_CHUNK_SIZE=1000

# Optional: control jobs persistence location (useful in tests/containers)
# If a directory is provided, jobs.json will be created inside it.
# JOBS_DIR=data
# Or set an explicit file path:
# JOBS_FILE=data/jobs.json

# ===========================
# Cache Configuration
# ===========================

VPN_CACHE_ENABLED=true
VPN_REDIS_URL=redis://localhost:6379/0
VPN_CACHE_TTL=3600

# Optional Redis cluster-style nodes (unused unless explicitly wired)
# STREAMLINE_REDIS_NODES=[{"host":"redis","port":"6379"}]

# ===========================
# Database (optional)
# ===========================

DATABASE_URL=postgresql://user:password@localhost/streamlinevpn

# ===========================
# Logging
# ===========================

VPN_LOG_LEVEL=INFO
